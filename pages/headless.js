import Head from "next/head";
import { useContext, useState } from "react";
import { GlobalContext } from "@utils/GlobalContext";
import { MoonIcon, SunIcon } from "@heroicons/react/outline";
import { Tab } from '@headlessui/react'
import Button from "@components/Button";
import Footer from "@components/Footer"
import Navbar from "@components/Navbar";
import Text from "@components/Text";
import Code from "@components/Code";
import Skeletons from "@components/Skeletons";
import Section from "@components/Section";
import BackToTop from "@components/BackToTop";
import Accordion from "@components/Accordion";
import Tabs from "@components/Tabs";
import Tabss from "@components/Tabss";
import TabsVertical from "@components/TabsVertical";
import TabsVerticall from "@components/TabsVerticall";
import Layout from "@components/Layout";
import MyModal from "@components/MyModal";

function classNames(...classes) {
	return classes.filter(Boolean).join(' ')
}

export default function Third() {
	const { darkMode, setDarkMode } = useContext(GlobalContext);

	const [openModal, setOpenModal] = useState(false)

	const [openDangerModal, setOpenDangerModal] = useState(false)

	const [openModalWithData, setOpenModalWithData] = useState(false)
	const [modalData, setModalData] = useState();
	// handle modal submitted 
	function handleSubmitModal() {
		setOpenModalWithData(false);
		alert(`Submit Delete ${modalData}`)
	}
	// handle modal opened
	function handleShowModal(data) {
		setModalData(data)
		setOpenModalWithData(true)
	}

	return (
		<div>
			<Head>
				<title>Headless</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Navbar />

			<Layout>
				<main className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8 pb-16">

					<Section id="dark-mode" name="Dark Mode">
						<div className="flex gap-3 flex-wrap">
							<div
								onClick={() => setDarkMode(!darkMode)}
								className="transition-all cursor-pointer w-12 h-7 dark:bg-blue-500 bg-neutral-200 rounded-full relative"
							>
								<div className="h-5 w-5 bg-white rounded-full absolute top-1 transition-all duration-300 dark:left-6 left-1"></div>
							</div>
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="relative flex items-center py-0.5 px-1 bg-blue-500 rounded-full h-7">
								<span className="absolute w-5 h-5 rounded-full bg-white dark:left-[1.7rem] left-1 transition-all duration-300"></span>
								<span aria-hidden={true}>‚òÄÔ∏è</span>
								<span aria-hidden={true}>üåô</span>
							</button>
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className={`${darkMode ? "bg-gray-800" : "bg-gray-200"} relative flex gap-1 items-center px-1 py-0.5 rounded-full h-7`}>
								<span className="absolute w-5 h-5 rounded-full bg-blue-500 dark:left-[1.6rem] left-1.5 transition-all duration-300"></span>
								<span aria-hidden={true}><SunIcon className={`${darkMode ? "text-white bg-white" : ""}h-5 w-5`} /></span>
								<span aria-hidden={true}><MoonIcon className="h-5 w-5" /></span>
							</button>
							{darkMode ?
								<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-neutral-800 hover:bg-neutral-700 text-white rounded-full">
									<SunIcon />
								</button>
								:
								<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-gray-100 hover:bg-gray-200 rounded-full">
									<MoonIcon className="transform rotate-45" />
								</button>
							}
						</div>
					</Section>

					<div className="!py-2 px-2 rounded mx-4 bg-opacity-20 dark:bg-opacity-40 bg-gray-100 dark:bg-neutral-800 backdrop-filter backdrop-blur fixed bottom-20 right-3 md:right-10 z-10">
						{darkMode ?
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-neutral-800 hover:bg-neutral-700 text-white rounded-full">
								<SunIcon />
							</button>
							:
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-gray-100 hover:bg-gray-200 rounded-full">
								<MoonIcon />
							</button>
						}
					</div>

					<BackToTop />

					<Section id="modal" name="Modal">
						<MyModal
							modalTitle="Modal Title"
							isOpenModal={openModal}
							onCloseModal={() => setOpenModal(false)}
							onConfirmModal={() => setOpenModal(false)}
						>
							<Text className="pb-2">Modal Body</Text>
						</MyModal>
						<Button className="mt-2" onClick={() => setOpenModal(true)}>Open Modal</Button>
						<br />
						<MyModal
							modalTitle="Modal Title Danger"
							isOpenModal={openDangerModal}
							danger
							onCloseModal={() => setOpenDangerModal(false)}
							onConfirmModal={() => setOpenDangerModal(false)}
						>
							<Text className="pb-2">Modal Body Danger</Text>
						</MyModal>
						<Button.red className="mt-2" onClick={() => setOpenDangerModal(true)}>Open Danger Modal</Button.red>
						<br />
						<MyModal
							modalTitle="Modal Title With Data"
							isOpenModal={openModalWithData}
							onCloseModal={() => setOpenModalWithData(false)}
							onConfirmModal={handleSubmitModal}
						>
							<Text className="pb-2">Modal Body With {modalData}</Text>
						</MyModal>
						<Button className="mt-2" onClick={() => handleShowModal("Data 2")}>Open Modal With Data</Button>
					</Section>

					<Section id="simple-tab" name="Simple Tab">
						<Tabs
							tabs={["Tab A", "Tab B"]}
							contents={["Content A", "Content B Content B Content B Content B Content B"]}
						>
						</Tabs>
						<TabsVerticall
							tabs={["Tab A Vertical", "Tab B Vertical"]}
							contents={["Taxidermy bushwick celiac master cleanse microdosing seitan. Fashion axe four dollar toast truffaut, direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos. Taxidermy bushwick celiac master cleanse microdosing seitan. Fashion axe four dollar toast truffaut, direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos.", "Content B Taxidermy bushwick celiac master cleanse microdosing seitan. Fashion axe four dollar toast truffaut, direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos. direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos."]}
						>
						</TabsVerticall>
						<Tabss
							tabs={["Tab A", "Tab B"]}
							contents={["Content A", "Content B Content B Content B Content B"]}
						>
						</Tabss>
						<TabsVertical
							tabs={["Tab A Vertical", "Tab B Vertical"]}
							contents={["Taxidermy bushwick celiac master cleanse microdosing seitan. Fashion axe four dollar toast truffaut, direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos. Taxidermy bushwick celiac master cleanse microdosing seitan. Fashion axe four dollar toast truffaut, direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos.", "Content B Taxidermy bushwick celiac master cleanse microdosing seitan. Fashion axe four dollar toast truffaut, direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos. direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos."]}
						>
						</TabsVertical>
					</Section>

					<Section id="tab" name="Tab">
						<Tab.Group>
							<Tab.List className="w-full max-w-sm flex p-1 space-x-1 bg-gray-100 dark:bg-neutral-800 rounded-xl font-medium">
								<Tab className={({ selected }) =>
									classNames(
										'w-full py-2 text-base font-medium text-blue-500 rounded-xl transition-all duration-300',
										selected ? 'bg-blue-500	!text-white' :
											'text-blue-500 hover:bg-gray-200 dark:hover:bg-neutral-700 hover:text-blue-600 dark:hover:text-blue-600'
									)
								}
								> Tab A </Tab>
								<Tab className={({ selected }) =>
									classNames(
										'w-full py-2 text-base font-medium text-blue-500 rounded-xl transition-all duration-300',
										selected ? 'bg-blue-500	!text-white' :
											'text-blue-500 hover:bg-gray-200 dark:hover:bg-neutral-700 hover:text-blue-600 dark:hover:text-blue-600'
									)
								}
								> Tab B </Tab>
							</Tab.List>
							<Tab.Panels className="mt-2 max-w-lg">
								<Tab.Panel className='rounded-xl p-3 dark:text-white'>
									<p className="leading-relaxed text-base">Taxidermy bushwick celiac master cleanse microdosing seitan. Fashion axe four dollar toast truffaut, direct trade kombucha brunch williamsburg keffiyeh gastropub tousled squid meh taiyaki drinking vinegar tacos.</p>
									<div className="flex md:mt-4 mt-6">
										<button className="inline-flex text-white bg-blue-500 border-0 py-1 px-4 focus:outline-none hover:bg-blue-600 rounded">Button</button>
									</div>
								</Tab.Panel>
								<Tab.Panel className='rounded-xl p-3 dark:text-white'>
									<div className="flex flex-wrap text-center">
										<div className="p-4 w-1/2">
											<h2 className="title-font font-medium sm:text-4xl text-3xl text-gray-900 dark:text-white">2.7K</h2>
											<p className="leading-relaxed">Users</p>
										</div>
										<div className="p-4 w-1/2">
											<h2 className="title-font font-medium sm:text-4xl text-3xl text-gray-900 dark:text-white">1.8K</h2>
											<p className="leading-relaxed">Subscribes</p>
										</div>
									</div>
								</Tab.Panel>
							</Tab.Panels>
						</Tab.Group>
					</Section>

					<Section id="tab-style-a" name="Tab Style A">
						<Tab.Group>
							<Tab.List className="flex font-medium whitespace-nowrap border-b border-gray-200 dark:border-neutral-700">
								<div>
									<Tab className={({ selected }) =>
										classNames(
											'w-full mr-4 py-2 text-base font-medium -mb-[0.06rem] transition-all duration-300',
											'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200',
											'border-b-2 border-transparent hover:border-gray-500 dark:hover:border-gray-400',
											selected ? '!text-blue-500 border-b-2 !border-blue-500' : ''
										)
									}
									>
										Tab A
									</Tab>
									<Tab className={({ selected }) =>
										classNames(
											'w-full mr-4 py-2 text-base font-medium -mb-[0.06rem] transition-all duration-300',
											'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200',
											'border-b-2 border-transparent hover:border-gray-500 dark:hover:border-gray-400',
											selected ? '!text-blue-500 border-b-2 !border-blue-500' : ''
										)
									}
									>
										Tab B
									</Tab>
								</div>
							</Tab.List>
							<Tab.Panels className="mt-2">
								<Tab.Panel className='rounded-xl p-3 dark:text-white'>
									<Skeletons className="max-w-[12rem]" />
								</Tab.Panel>
								<Tab.Panel className='rounded-xl p-3 dark:text-white'>
									<Skeletons className="max-w-[24rem] !rounded-full" />
								</Tab.Panel>
							</Tab.Panels>
						</Tab.Group>
					</Section>

					<Section id="tab-style-b" name="Tab Style B">
						<Tab.Group>
							<Tab.List className="flex font-medium whitespace-nowrap border-b border-gray-200 dark:border-neutral-700">
								<div className="flex gap-x-6">
									<Tab className={({ selected }) =>
										classNames(
											'w-full py-2 text-sm font-medium -mb-[0.06rem] transition-all duration-300',
											'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200',
											'border-b-2 border-transparent hover:border-gray-500 dark:hover:border-gray-400',
											selected ? '!text-blue-500 border-b-2 !border-blue-500' : ''
										)
									}
									>
										Tab A
									</Tab>
									<Tab className={({ selected }) =>
										classNames(
											'w-full py-2 text-sm font-medium -mb-[0.06rem] transition-all duration-300',
											'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200',
											'border-b-2 border-transparent hover:border-gray-500 dark:hover:border-gray-400',
											selected ? '!text-blue-500 border-b-2 !border-blue-500' : ''
										)
									}
									>
										Tab Title B
									</Tab>
									<Tab className={({ selected }) =>
										classNames(
											'w-full py-2 text-sm font-medium -mb-[0.06rem] transition-all duration-300',
											'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200',
											'border-b-2 border-transparent hover:border-gray-500 dark:hover:border-gray-400',
											selected ? '!text-blue-500 border-b-2 !border-blue-500' : ''
										)
									}
									>
										Tab Title C
									</Tab>
								</div>
							</Tab.List>
							<Tab.Panels className="mt-2">
								<Tab.Panel className='rounded-xl py-3 dark:text-white'>
									<Skeletons className="max-w-[16rem] !rounded-full" />
								</Tab.Panel>
								<Tab.Panel className='rounded-xl py-3 dark:text-white'>
									<Skeletons className="max-w-2xl !rounded-full" />
								</Tab.Panel>
								<Tab.Panel className='rounded-xl py-3 dark:text-white'>
									<Skeletons className="!rounded-full" />
								</Tab.Panel>
							</Tab.Panels>
						</Tab.Group>
					</Section>

					<Section id="accordion" name="Accordion">
						<Accordion title="Accordion Title" className="max-w-xl my-2 !text-base">
							<Text>Accordion Body</Text>
						</Accordion>
						<Accordion title="Accordion Title" className="max-w-xl my-2">
							<Text className="text-sm">Accordion Body</Text>
						</Accordion>
						<Code code={
							`import Accordion from "@components/Accordion";

<Accordion title="Accordion Title" className="max-w-xl my-2 !text-base">
	<Text>Accordion Body</Text>
</Accordion>
<Accordion title="Accordion Title" className="max-w-xl my-2">
	<Text className="text-sm">Accordion Body</Text>
</Accordion>`
						}>
						</Code>
					</Section>

				</main>
			</Layout>

			<Footer />

		</div>
	);
}