import Head from "next/head";
import { useContext, useState } from "react";
import { GlobalContext } from "@utils/GlobalContext";
import { DownloadIcon, InformationCircleIcon, MinusSmIcon, MoonIcon, PlusCircleIcon, SunIcon } from "@heroicons/react/outline";
import Button from "@components/Button";
import ButtonOutline from "@components/ButtonOutline";
import Heading from "@components/Heading";
import Footer from "@components/Footer"
import Navbar from "@components/Navbar";
import Text from "@components/Text";
import Code from "@components/Code";
import Alert from "@components/Alert";
import AlertOutline from "@components/AlertOutline";
import Badge from "@components/Badge";
import BadgeOutline from "@components/BadgeOutline";
import Skeletons from "@components/Skeletons";
import Section from "@components/Section";
import Container from "@components/Container";
import BackToTop from "@components/BackToTop";
import LinkButton from "@components/LinkButton";
import LinkButtonOutline from "@components/LinkButtonOutline";
import Layout from "@components/Layout";
import Progress from "@components/Progress";
import Avatar from "@components/Avatar";
import TextArea from "@components/TextArea";
import Input from "@components/Input";
import InputLabel from "@components/InputLabel";
import Select from "@components/Select";
import Checkbox from "@components/Checkbox";
import Radio from "@components/Radio";
import Link from "next/link";
import Spinner from "@components/Spinner";

export default function Third() {
	const { darkMode, setDarkMode } = useContext(GlobalContext);

	const [radioColor, setRadioColor] = useState();
	function handleRadioChange(e) {
		setRadioColor(e.target.value)
	}

	const [checkedRadioColor, setCheckedRadioColor] = useState("purple");
	function handleCheckedRadioChange(e) {
		setCheckedRadioColor(e.target.value)
	}

	const [selectedColor, setSelectedColor] = useState("blue")
	function handleSelectColor(e) {
		setSelectedColor(e.target.value);
	};

	const [selectedColorWithId, setSelectedColorWithId] = useState(3)
	function handleSelectColorWithId(e) {
		setSelectedColorWithId(e.target.value)
	};

	const [inputLabelLeft, setInputLabelLeft] = useState()
	function handleInputLabelLeftChange(e) {
		setInputLabelLeft(e.target.value);
	};

	const [input, setInput] = useState()
	function handleInputChange(e) {
		setInput(e.target.value);
	};

	const [textArea, setTextArea] = useState()
	function handleTextAreaChange(e) {
		setTextArea(e.target.value);
	};

	const [uncheckedColor, setUncheckedColor] = useState([])
	function handleUncheckedCheckboxChange(e) {
		e.persist();
		if (e.target.checked) {
			setUncheckedColor([...uncheckedColor, e.target.value]);
		} else {
			setUncheckedColor(uncheckedColor.filter(item => item !== e.target.value));
		}
	};

	const [checkedColor, setCheckedColor] = useState(["yellow", "pink"])
	function handleCheckedCheckboxChange(e) {
		e.persist();
		if (e.target.checked) {
			setCheckedColor([...checkedColor, e.target.value]);
		} else {
			setCheckedColor(checkedColor.filter(item => item !== e.target.value));
		}
	};

	return (
		<div>
			<Head>
				<title>Components</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Navbar />

			<Layout>
				<main className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8 pb-16">

					<Section id="components" name="Components TOC">
						<div className="grid sm:grid-cols-2 md:grid-cols-3">
							<div>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#dark-mode">Dark Mode</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#radio">Native Radio</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#checkbox">Native Checkbox</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#native-select">Native Select</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#input-label">Input Label</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#input">Input</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#text-area">Text Area</Link>
								</span>
							</div>
							<div>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#avatar">Avatar</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#spinner">Spinner</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#section">Section</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#container">Container</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#heading">Heading</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#text">Text</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#button">Button</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#button-outline">Button Outline</Link>
								</span>
							</div>
							<div>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#link-button">Link Button</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#link-button-outline">Link Button Outline</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#badge">Badge</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#badge-outline">Badge Outline</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#alert">Alert</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#alert-outline">Alert Outline</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#skeletons">Skeletons</Link>
								</span>
								<span className="block mb-1 font-medium text-blue-500 hover:text-blue-600 hover:underline transition-all duration-200">
									<Link href="#progress">Progress</Link>
								</span>
							</div>
						</div>
					</Section>

					<Section id="dark-mode" name="Dark Mode">
						<div className="flex gap-3 flex-wrap">
							<div
								onClick={() => setDarkMode(!darkMode)}
								className="transition-all cursor-pointer w-12 h-7 dark:bg-blue-500 bg-neutral-200 rounded-full relative"
							>
								<div className="h-5 w-5 bg-white rounded-full absolute top-1 transition-all duration-300 dark:left-6 left-1"></div>
							</div>
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="relative flex items-center py-0.5 px-1 bg-blue-500 rounded-full h-7">
								<span className="absolute w-5 h-5 rounded-full bg-white dark:left-[1.7rem] left-1 transition-all duration-300"></span>
								<span aria-hidden={true}>‚òÄÔ∏è</span>
								<span aria-hidden={true}>üåô</span>
							</button>
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className={`${darkMode ? "bg-gray-800" : "bg-gray-200"} relative flex gap-1 items-center px-1 py-0.5 rounded-full h-7`}>
								<span className="absolute w-5 h-5 rounded-full bg-blue-500 dark:left-[1.6rem] left-1.5 transition-all duration-300"></span>
								<span aria-hidden={true}><SunIcon className={`${darkMode ? "text-white bg-white" : ""}h-5 w-5`} /></span>
								<span aria-hidden={true}><MoonIcon className="h-5 w-5" /></span>
							</button>
							{darkMode ?
								<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-neutral-800 hover:bg-neutral-700 text-white rounded-full">
									<SunIcon />
								</button>
								:
								<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-gray-100 hover:bg-gray-200 rounded-full">
									<MoonIcon className="transform rotate-45" />
								</button>
							}
						</div>
					</Section>

					<div className="!py-2 px-2 rounded mx-4 bg-opacity-20 dark:bg-opacity-40 bg-gray-100 dark:bg-neutral-800 backdrop-filter backdrop-blur fixed bottom-20 right-3 md:right-10 z-10">
						{darkMode ?
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-neutral-800 hover:bg-neutral-700 text-white rounded-full">
								<SunIcon />
							</button>
							:
							<button onClick={() => setDarkMode(!darkMode)} aria-label="Change Theme" className="w-8 h-8 p-1 transition-all ease-in duration-300 bg-gray-100 hover:bg-gray-200 rounded-full">
								<MoonIcon />
							</button>
						}
					</div>

					<BackToTop />

					<Section id="radio" name="Native Radio">
						<Text className="mb-4 font-medium">Unchecked Radio</Text>
						<Radio
							label="Red"
							name="red"
							value="red"
							onChange={handleRadioChange}
							checked={radioColor == "red"}
						/>
						<Radio
							label="Blue"
							name="blue"
							value="blue"
							onChange={handleRadioChange}
							checked={radioColor == "blue"}
						/>
						<Text className="mb-4 text-sm font-medium !text-red-500">Radio : {radioColor ? radioColor : ""}</Text>

						<Text className="mb-4 font-medium">Checked Radio</Text>
						<Radio
							label="Green"
							name="green"
							value="green"
							onChange={handleCheckedRadioChange}
							checked={checkedRadioColor == "green"}
						/>
						<Radio
							label="Purple"
							name="purple"
							value="purple"
							onChange={handleCheckedRadioChange}
							checked={checkedRadioColor == "purple"}
						/>
						<Text className="mb-4 text-sm font-medium !text-red-500">Initial Radio : {checkedRadioColor ? checkedRadioColor : ""}</Text>
						<Code code={
							`import { useState } from "react"; 
import Radio from "@components/Radio";
import Text from "@components/Text";

const [radioColor, setRadioColor] = useState();
function handleRadioChange(e) {
	setRadioColor(e.target.value)
}

const [checkedRadioColor, setCheckedRadioColor] = useState("purple");
function handleCheckedRadioChange(e) {
	setCheckedRadioColor(e.target.value)
}

<Text className="mb-4 font-medium">Unchecked Radio</Text>
<Radio
	label="Red"
	name="red"
	value="red"
	onChange={handleRadioChange}
	checked={radioColor == "red"}
/>
<Radio
	label="Blue"
	name="blue"
	value="blue"
	onChange={handleRadioChange}
	checked={radioColor == "blue"}
/>
<Text className="mb-4 text-sm font-medium !text-red-500">Radio : {radioColor ? radioColor : ""}</Text>

<Text className="mb-4 font-medium">Checked Radio</Text>
<Radio
	label="Green"
	name="green"
	value="green"
	onChange={handleCheckedRadioChange}
	checked={checkedRadioColor == "green"}
/>
<Radio
	label="Purple"
	name="purple"
	value="purple"
	onChange={handleCheckedRadioChange}
	checked={checkedRadioColor == "purple"}
/>
<Text className="mb-4 text-sm font-medium !text-red-500">Initial Radio : {checkedRadioColor ? checkedRadioColor : ""}</Text>`
						}>
						</Code>
					</Section>

					<Section id="checkbox" name="Native Checkbox">
						<Text className="mb-4 font-medium">Unchecked Checkbox</Text>
						<Checkbox
							label="Red"
							name="red"
							value="red"
							onChange={handleUncheckedCheckboxChange}
						/>
						<Checkbox
							label="Blue"
							name="blue"
							value="blue"
							onChange={handleUncheckedCheckboxChange}
						/>
						<Checkbox
							label="Green"
							name="green"
							value="green"
							onChange={handleUncheckedCheckboxChange}
						/>
						<Text className="mb-4 text-sm font-medium !text-red-500">
							Checkbox : {" "}
							{uncheckedColor ?
								uncheckedColor.map(item =>
									<span key={item}>{item}, </span>
								)
								: ""}
						</Text>

						<Text className="mb-4 font-medium">Checked Checkbox</Text>
						<Checkbox
							label="Yellow"
							name="yellow"
							value="yellow"
							onChange={handleCheckedCheckboxChange}
							checked={checkedColor.includes("yellow")}
						/>
						<Checkbox
							label="Purple"
							name="purple"
							value="purple"
							onChange={handleCheckedCheckboxChange}
							checked={checkedColor.includes("purple")}
						/>
						<Checkbox
							label="Pink"
							name="pink"
							value="pink"
							onChange={handleCheckedCheckboxChange}
							checked={checkedColor.includes("pink")}
						/>
						<Text className="mb-4 text-sm font-medium !text-red-500">
							Initial Checkbox : {" "}
							{checkedColor ?
								checkedColor.map(item =>
									<span key={item}>{item}, </span>
								)
								: ""}
						</Text>
						<Code code={
							`import { useState } from "react"; 
import Checkbox from "@components/Checkbox";
import Text from "@components/Text";

const [uncheckedColor, setUncheckedColor] = useState([])
function handleUncheckedCheckboxChange(e) {
	e.persist();
	if (e.target.checked) {
		setUncheckedColor([...uncheckedColor, e.target.value]);
	} else {
		setUncheckedColor(uncheckedColor.filter(item => item !== e.target.value));
	}
};

const [checkedColor, setCheckedColor] = useState(["yellow", "pink"])
function handleCheckedCheckboxChange(e) {
	e.persist();
	if (e.target.checked) {
		setCheckedColor([...checkedColor, e.target.value]);
	} else {
		setCheckedColor(checkedColor.filter(item => item !== e.target.value));
	}
};

<Text className="mb-4 font-medium">Unchecked Checkbox</Text>
<Checkbox
	label="Red"
	name="red"
	value="red"
	onChange={handleUncheckedCheckboxChange}
/>
<Checkbox
	label="Blue"
	name="blue"
	value="blue"
	onChange={handleUncheckedCheckboxChange}
/>
<Checkbox
	label="Green"
	name="green"
	value="green"
	onChange={handleUncheckedCheckboxChange}
/>
<Text className="mb-4 text-sm font-medium !text-red-500">
	Checkbox : {" "}
	{uncheckedColor ?
		uncheckedColor.map(item =>
			<span key={item}>{item}, </span>
		)
		: ""}
</Text>

<Text className="mb-4 font-medium">Checked Checkbox</Text>
<Checkbox
	label="Yellow"
	name="yellow"
	value="yellow"
	onChange={handleCheckedCheckboxChange}
	checked={checkedColor.includes("yellow")}
/>
<Checkbox
	label="Purple"
	name="purple"
	value="purple"
	onChange={handleCheckedCheckboxChange}
	checked={checkedColor.includes("purple")}
/>
<Checkbox
	label="Pink"
	name="pink"
	value="pink"
	onChange={handleCheckedCheckboxChange}
	checked={checkedColor.includes("pink")}
/>
<Text className="mb-4 text-sm font-medium !text-red-500">
	Initial Checkbox : {" "}
	{checkedColor ?
		checkedColor.map(item =>
			<span key={item}>{item}, </span>
		)
		: ""}
</Text>`
						}>
						</Code>
					</Section>

					<Section id="native-select" name="Native Select">
						<Select
							label="Select Color"
							id="color"
							name="color"
							value={selectedColor ? selectedColor : "Choose Color"}
							onChange={handleSelectColor}
						>
							<Select.option value="red">Red</Select.option>
							<Select.option value="blue">Blue</Select.option>
							<Select.option value="green">Green</Select.option>
						</Select>
						<Text className="mb-4 text-sm font-medium !text-red-500"> Selected : {selectedColor ? selectedColor : ""} </Text>

						<Select
							label="Select Color With Id"
							id="colorwithid"
							name="colorwithid"
							value={selectedColorWithId ? selectedColorWithId : "Choose Color With Id"}
							onChange={handleSelectColorWithId}
						>
							<Select.option value="1">Purple</Select.option>
							<Select.option value="2">Yellow</Select.option>
							<Select.option value="3">Pink</Select.option>
						</Select>
						<Text className="mb-4 text-sm font-medium !text-red-500">Initial Selected : {selectedColorWithId ? selectedColorWithId : ""} </Text>
						<Code code={
							`import { useState } from "react"; 
import Select from "@components/Select";
import Text from "@components/Text";

const [selectedColor, setSelectedColor] = useState("blue")
function handleSelectColor(e) {
	setSelectedColor(e.target.value);
};

const [selectedColorWithId, setSelectedColorWithId] = useState(3)
function handleSelectColorWithId(e) {
	setSelectedColorWithId(e.target.value)
};

<Select
	label="Select Color"
	id="color"
	name="color"
	value={selectedColor ? selectedColor : "Choose Color"}
	onChange={handleSelectColor}
>
	<Select.option value="red">Red</Select.option>
	<Select.option value="blue">Blue</Select.option>
	<Select.option value="green">Green</Select.option>
</Select>
<Text className="mb-4 text-sm font-medium !text-red-500"> Selected : {selectedColor ? selectedColor : ""} </Text>

<Select
	label="Select Color With Id"
	id="colorwithid"
	name="colorwithid"
	value={selectedColorWithId ? selectedColorWithId : "Choose Color With Id"}
	onChange={handleSelectColorWithId}
>
	<Select.option value="1">Purple</Select.option>
	<Select.option value="2">Yellow</Select.option>
	<Select.option value="3">Pink</Select.option>
</Select>
<Text className="mb-4 text-sm font-medium !text-red-500">Initial Selected : {selectedColorWithId ? selectedColorWithId : ""} </Text>`
						}>
						</Code>
					</Section>

					<Section id="input-label" name="Input Label">
						<InputLabel
							label="Input Label Left"
							id="inputlabelleft"
							name="inputlabelleft"
							placeholder="Input Label Left"
							labelLeft="https://"
							onChange={handleInputLabelLeftChange}
						/>
						<Text className="mb-4 text-sm font-medium !text-red-500"> Input Label Left : {inputLabelLeft ? inputLabelLeft : ""} </Text>
						<Code code={
							`import { useState } from "react"; 
import Text from "@components/Text";
import InputLabel from "@components/InputLabel";

const [inputLabelLeft, setInputLabelLeft] = useState()
function handleInputLabelLeftChange(e) {
	setInputLabelLeft(e.target.value);
};

<InputLabel
	label="Input Label Left"
	id="inputlabelleft"
	name="inputlabelleft"
	placeholder="Input Label Left"
	labelLeft="https://"
	onChange={handleInputLabelLeftChange}
/>
<Text className="mb-4 text-sm font-medium !text-red-500"> Input Label Left : {inputLabelLeft ? inputLabelLeft : ""} </Text>`
						}>
						</Code>
						<br />
						<InputLabel
							label="Input Label Right"
							id="inputlabelright"
							name="inputlabelright"
							placeholder="Input Label Right"
							labelRight=".com"
						/>
						<Code code={
							`import InputLabel from "@components/InputLabel";

<InputLabel
	label="Input Label Right"
	id="inputlabelright"
	name="inputlabelright"
	placeholder="Input Label Right"
	labelRight=".com"
/>`
						}>
						</Code>
					</Section>

					<Section id="input" name="Input">
						<Input
							label="Input With Label"
							id="inputwithlabel"
							name="inputwithlabel"
							placeholder="Input With Label"
							onChange={handleInputChange}
						/>
						<Text className="mb-4 text-sm font-medium !text-red-500"> Input  : {input ? input : ""} </Text>
						<Code code={
							`import { useState } from "react"; 
import Input from "@components/Input";
import Text from "@components/Text";

const [input, setInput] = useState()
function handleInputChange(e) {
	setInput(e.target.value);
};

<Input
	label="Input With Label"
	id="inputwithlabel"
	name="inputwithlabel"
	placeholder="Input With Label"
	onChange={handleInputChange}
/>
<Text className="mb-4 text-sm font-medium !text-red-500"> Input  : {input ? input : ""} </Text>`
						}>
						</Code>
						<Input
							id="inputnolabel"
							name="inputnolabel"
							placeholder="Input No Label"
							className="mt-6"
						/>
						<Input.disabled
							id="inputdisablednolabel"
							name="inputdisablednolabel"
							value="Input Disabled No Label"
						/>
						<Input.disabled
							label="Input Disabled With Label"
							id="inputdisabledwithlabel"
							name="inputdisabledwithlabel"
							value="Input Disabled With Label"
						/>
						<Code code={
							`import Input from "@components/Input";

<Input
	id="inputnolabel"
	name="inputnolabel"
	placeholder="Input No Label"
	className="mt-6"
/>
<Input.disabled
	id="inputdisablednolabel"
	name="inputdisablednolabel"
	value="Input Disabled No Label"
/>
<Input.disabled
	label="Input Disabled With Label"
	id="inputdisabledwithlabel"
	name="inputdisabledwithlabel"
	value="Input Disabled With Label"
/>`
						}>
						</Code>
					</Section>

					<Section id="text-area" name="Text Area">
						<TextArea
							label="Text Area with Label"
							id="textareawithlabel"
							name="textareawithlabel"
							height={2}
							placeholder="Text Area With Label"
							onChange={handleTextAreaChange}
						/>
						<Text className="mb-4 text-sm font-medium !text-red-500"> Text Area : {textArea ? textArea : ""} </Text>
						<Code code={
							`import { useState } from "react"; 
import TextArea from "@components/TextArea";
import Text from "@components/Text";

const [textArea, setTextArea] = useState()
function handleTextAreaChange(e) {
	setTextArea(e.target.value);
};

<TextArea
	label="Text Area with Label"
	id="textareawithlabel"
	name="textareawithlabel"
	height={2}
	placeholder="Text Area With Label"
	onChange={handleTextAreaChange}
/>
<Text className="mb-4 text-sm font-medium !text-red-500"> Text Area : {textArea ? textArea : ""} </Text>`
						}>
						</Code>
						<TextArea
							id="textareanolabel"
							name="textareanolabel"
							height={2}
							placeholder="Text Area No Label"
							className="mt-6"
						/>
						<TextArea.disabled
							label="Text Area Disabled with Label"
							id="textareawithlabeldisabled"
							name="textareawithlabeldisabled"
							height={2}
							value="Text Area Disabled with Label"
						/>
						<TextArea.disabled
							id="textareadisabled"
							name="textareadisabled"
							height={2}
							value="Text Area Disabled No Label"
						/>
						<Code code={
							`import TextArea from "@components/TextArea";

<TextArea
	id="textareanolabel"
	name="textareanolabel"
	height={2}
	placeholder="Text Area No Label"
	className="mt-6"
/>
<TextArea.disabled
	id="textareadisabled"
	name="textareadisabled"
	height={2}
	value="Text Area Disabled No Label"
/>
<TextArea.disabled
	label="Text Area Disabled with Label"
	id="textareawithlabeldisabled"
	name="textareawithlabeldisabled"
	height={2}
	value="Text Area Disabled with Label"
/>`
						}>
						</Code>
					</Section>

					<Section id="avatar" name="Avatar">
						<div className="flex -space-x-1 flex-wrap mb-4">
							<Avatar
								className="!border-red-500"
								src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
								alt="Image Alt"
							/>
							<Avatar className="rounded-lg !border-emerald-500"
								src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
								alt="Image Alt"
							/>
						</div>
						<div className="flex flex-wrap mb-4 gap-x-2">
							<Avatar
								className="!border-orange-500"
								src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
								alt="Image Alt"
							/>
							<Avatar
								src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
								alt="Image Alt"
							/>
						</div>
						<div className="flex flex-wrap mb-4 gap-x-2">
							<Avatar className="h-10 w-10 !border-purple-600"
								src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
								alt="Image Alt"
							/>
							<Avatar className="!h-12 !w-12 rounded-lg"
								src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
								alt="Image Alt"
							/>
						</div>
						<Code code={
							`import Avatar from "@components/Avatar";

<div className="flex -space-x-1 flex-wrap mb-4">
	<Avatar
		className="!border-red-500"
		src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
		alt="Image Alt"
	/>
	<Avatar className="rounded-lg !border-emerald-500"
		src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
		alt="Image Alt"
	/>
</div>
<div className="flex flex-wrap mb-4 gap-x-2">
	<Avatar
		className="!border-orange-500"
		src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
		alt="Image Alt"
	/>
	<Avatar
		src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
		alt="Image Alt"
	/>
</div>
<div className="flex flex-wrap mb-4 gap-x-2">
	<Avatar className="h-10 w-10 !border-purple-600"
		src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
		alt="Image Alt"
	/>
	<Avatar className="!h-12 !w-12 rounded-lg"
		src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
		alt="Image Alt"
	/>
</div>`
						}>
						</Code>
					</Section>

					<Section id="spinner" name="Spinner">
						<Spinner></Spinner>
						<Spinner.green></Spinner.green>
						<Spinner.red small></Spinner.red>
						<Spinner.yellow small></Spinner.yellow>
						<Spinner.orange large></Spinner.orange>
						<Spinner.purple large></Spinner.purple>
						<Spinner.dark></Spinner.dark>
						<Code code={
							`import Spinner from "@components/Spinner"; 
							
<Spinner></Spinner>
<Spinner.green></Spinner.green>
<Spinner.red small></Spinner.red>
<Spinner.yellow small></Spinner.yellow>
<Spinner.orange large></Spinner.orange>
<Spinner.purple large></Spinner.purple>
<Spinner.dark></Spinner.dark>`
						}>
						</Code>
					</Section>

					<Section id="section" name="Section">
						<Section className="!py-0">
							<Text>Section Content no Title</Text>
						</Section>
						<Section id="sectiontitle" name="Section With Title" className="!py-0">
							<Text>Section Content</Text>
						</Section>
						<Code code={
							`import Section from "@components/Section";

<Section className="!py-0">
	<Text>Section Content no Title</Text>
</Section>
<Section id="sectiontitle" name="Section With Title" className="!py-0">
	<Text>Section Content</Text>
</Section>`
						}>
						</Code>
					</Section>

					<Section id="container" name="Container">
						<Container>
							<Text>Container Default</Text>
						</Container>
						<Container large>
							<Text>Container large</Text>
						</Container>
						<Container medium>
							<Text>Container Medium</Text>
						</Container>
						<Container small>
							<Text>Container Small</Text>
						</Container>
						<Code code={
							`import Container from "@components/Container";

<Container>
	<Text>Container Default</Text>
</Container>
<Container large>
	<Text>Container large</Text>
</Container>
<Container medium>
	<Text>Container Medium</Text>
</Container>
<Container small>
	<Text>Container Small</Text>
</Container>`
						}>
						</Code>
					</Section>

					<Section id="heading" name="Heading">
						<Heading>Heading Default</Heading>
						<Heading.h2>Heading 2</Heading.h2>
						<Heading.h3>Heading 3</Heading.h3>
						<Heading.h4>Heading 4</Heading.h4>
						<Heading.h5>Heading 5</Heading.h5>
						<Heading.h6>Heading 6</Heading.h6>
						<Code code={
							`import Heading from "@components/Heading";

<Heading>Heading Default</Heading>
<Heading.h2>Heading 2</Heading.h2>
<Heading.h3>Heading 3</Heading.h3>
<Heading.h4>Heading 4</Heading.h4>
<Heading.h5>Heading 5</Heading.h5>
<Heading.h6>Heading 6</Heading.h6>`
						}>
						</Code>
					</Section>

					<Section id="text" name="Text">
						<Text.light className="mb-2">Text Light</Text.light>
						<Text className="mb-2">Text Normal</Text>
						<Text.medium>Text Medium</Text.medium>
						<Text.bold>Text Bold</Text.bold>
						<Text.extrabold>Text Extra Bold</Text.extrabold>
						<Code code={
							`import Text from "@components/Text";

<Text.light className="mb-2">Text Light</Text.light>
<Text className="mb-2">Text Normal</Text>
<Text.medium>Text Medium</Text.medium>
<Text.bold>Text Bold</Text.bold>
<Text.extrabold>Text Extra Bold</Text.extrabold>`
						}>
						</Code>
					</Section>

					<Section id="button" name="Button">
						<div className="flex items-center flex-wrap gap-2">
							<Button className="flex gap-1 items-center"><PlusCircleIcon className="h-5 w-5" />Default</Button>
							<Button.secondary>Secondary</Button.secondary>
							<Button.green>Green</Button.green>
							<Button.yellow>Yellow</Button.yellow>
							<Button.orange>Orange</Button.orange>
							<Button.red pills>Red</Button.red>
							<Button.purple pills>Purple</Button.purple>
							<Button.dark pills>Dark</Button.dark>
						</div>
						<Code code={
							`import Button from "@components/Button";

<Button className="flex gap-1 items-center"><PlusCircleIcon className="h-5 w-5" />Default</Button>
<Button.secondary>Secondary</Button.secondary>
<Button.green>Green</Button.green>
<Button.yellow>Yellow</Button.yellow>
<Button.orange>Orange</Button.orange>
<Button.red pills>Red</Button.red>
<Button.purple pills>Purple</Button.purple>
<Button.dark pills>Dark</Button.dark>`
						}>
						</Code>
					</Section>

					<Section id="button-outline" name="Button Outline">
						<div className="flex items-center flex-wrap gap-2">
							<ButtonOutline className="flex gap-1 items-center"><DownloadIcon className="h-5 w-5" />Default</ButtonOutline>
							<ButtonOutline.green>Green</ButtonOutline.green>
							<ButtonOutline.yellow>Yellow</ButtonOutline.yellow>
							<ButtonOutline.orange>Orange</ButtonOutline.orange>
							<ButtonOutline.red pills>Red</ButtonOutline.red>
							<ButtonOutline.purple pills>Purple</ButtonOutline.purple>
							<ButtonOutline.dark pills>Dark</ButtonOutline.dark>
						</div>
						<Code code={
							`import ButtonOutline from "@components/ButtonOutline";

<ButtonOutline className="flex gap-1 items-center"><DownloadIcon className="h-5 w-5"/>Default</ButtonOutline>
<ButtonOutline.green>Green</ButtonOutline.green>
<ButtonOutline.yellow>Yellow</ButtonOutline.yellow>
<ButtonOutline.orange>Orange</ButtonOutline.orange>
<ButtonOutline.red pills>Red</ButtonOutline.red>
<ButtonOutline.purple pills>Purple</ButtonOutline.purple>
<ButtonOutline.dark pills>Dark</ButtonOutline.dark>`
						}>
						</Code>
					</Section>

					<Section id="link-button" name="Link Button">
						<div className="flex items-center flex-wrap gap-2">
							<LinkButton href="#" className="flex gap-1 items-center"><DownloadIcon className="h-5 w-5" />Default</LinkButton>
							<LinkButton.secondary href="#">Secondary</LinkButton.secondary>
							<LinkButton.green href="#">Green</LinkButton.green>
							<LinkButton.yellow href="#">Yellow</LinkButton.yellow>
							<LinkButton.orange href="#">Orange</LinkButton.orange>
							<LinkButton.red href="#" pills>Red</LinkButton.red>
							<LinkButton.purple href="#" pills>Purple</LinkButton.purple>
							<LinkButton.dark href="#" pills>Dark</LinkButton.dark>
						</div>
						<Code code={
							`import LinkButton from "@components/LinkButton";

<LinkButton href="#" className="flex gap-1 items-center"><DownloadIcon className="h-5 w-5" />Default</LinkButton>
<LinkButton.secondary href="#">Secondary</LinkButton.secondary>
<LinkButton.green href="#">Green</LinkButton.green>
<LinkButton.yellow href="#">Yellow</LinkButton.yellow>
<LinkButton.orange href="#">Orange</LinkButton.orange>
<LinkButton.red href="#" pills>Red</LinkButton.red>
<LinkButton.purple href="#" pills>Purple</LinkButton.purple>
<LinkButton.dark href="#" pills>Dark</LinkButton.dark>`
						}>
						</Code>
					</Section>

					<Section id="link-button-outline" name="Link Button Outline">
						<div className="flex items-center flex-wrap gap-2">
							<LinkButtonOutline href="#" className="flex gap-1 items-center"><DownloadIcon className="h-5 w-5" />Default</LinkButtonOutline>
							<LinkButtonOutline.green href="#">Green</LinkButtonOutline.green>
							<LinkButtonOutline.yellow href="#">Yellow</LinkButtonOutline.yellow>
							<LinkButtonOutline.orange href="#">Orange</LinkButtonOutline.orange>
							<LinkButtonOutline.red href="#" pills>Red</LinkButtonOutline.red>
							<LinkButtonOutline.purple href="#" pills>Purple</LinkButtonOutline.purple>
							<LinkButtonOutline.dark href="#" pills>Dark</LinkButtonOutline.dark>
						</div>
						<Code code={
							`import LinkButtonOutline from "@components/LinkButtonOutline";

<LinkButtonOutline href="#" className="flex gap-1 items-center"><DownloadIcon className="h-5 w-5" />Default</LinkButtonOutline>
<LinkButtonOutline.green href="#">Green</LinkButtonOutline.green>
<LinkButtonOutline.yellow href="#">Yellow</LinkButtonOutline.yellow>
<LinkButtonOutline.orange href="#">Orange</LinkButtonOutline.orange>
<LinkButtonOutline.red href="#" pills>Red</LinkButtonOutline.red>
<LinkButtonOutline.purple href="#" pills>Purple</LinkButtonOutline.purple>
<LinkButtonOutline.dark href="#" pills>Dark</LinkButtonOutline.dark>`
						}>
						</Code>
					</Section>

					<Section id="badge" name="Badge">
						<div className="flex items-center flex-wrap gap-2">
							<Badge className="flex gap-1 items-center"><DownloadIcon className="h-4 w-4" />Default</Badge>
							<Badge.green>Green</Badge.green>
							<Badge.red isLarge>Red</Badge.red>
							<Badge.yellow isLarge pills>Yellow</Badge.yellow>
							<Badge.orange pills>Orange</Badge.orange>
							<Badge.purple pills>Purple</Badge.purple>
							<Badge.dark pills>Dark</Badge.dark>
						</div>
						<Code code={
							`import Badge from "@components/Badge";

<Badge className="flex gap-1 items-center"><DownloadIcon className="h-4 w-4" />Default</Badge>
<Badge.green>Green</Badge.green>
<Badge.red isLarge>Red</Badge.red>
<Badge.yellow isLarge pills>Yellow</Badge.yellow>
<Badge.orange pills>Orange</Badge.orange>
<Badge.purple pills>Purple</Badge.purple>
<Badge.dark pills>Dark</Badge.dark>`
						}>
						</Code>
					</Section>

					<Section id="badge-outline" name="Badge Outline">
						<div className="flex items-center flex-wrap gap-2">
							<BadgeOutline className="flex gap-1 items-center"><DownloadIcon className="h-4 w-4" />Default</BadgeOutline>
							<BadgeOutline.green>Green</BadgeOutline.green>
							<BadgeOutline.red isLarge>Red</BadgeOutline.red>
							<BadgeOutline.yellow isLarge pills>Yellow</BadgeOutline.yellow>
							<BadgeOutline.orange pills>Orange</BadgeOutline.orange>
							<BadgeOutline.purple pills>Purple</BadgeOutline.purple>
							<BadgeOutline.dark pills>Dark</BadgeOutline.dark>
						</div>
						<Code code={
							`import BadgeOutline from "@components/BadgeOutline";

<BadgeOutline className="flex gap-1 items-center"><DownloadIcon className="h-4 w-4" />Default</BadgeOutline>
<BadgeOutline.green>Green</BadgeOutline.green>
<BadgeOutline.red isLarge>Red</BadgeOutline.red>
<BadgeOutline.yellow isLarge pills>Yellow</BadgeOutline.yellow>
<BadgeOutline.orange pills>Orange</BadgeOutline.orange>
<BadgeOutline.purple pills>Purple</BadgeOutline.purple>
<BadgeOutline.dark pills>Dark</BadgeOutline.dark>`
						}>
						</Code>
					</Section>

					<Section id="alert" name="Alert">
						<Alert className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5" />Default</Alert>
						<Alert.green>Green</Alert.green>
						<Alert.red className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5" />Red <span className="font-normal">Danger</span></Alert.red>
						<Alert.yellow isLarge>Yellow</Alert.yellow>
						<Alert.orange pills>Orange</Alert.orange>
						<Alert.purple pills>Purple</Alert.purple>
						<Alert.dark pills>Dark</Alert.dark>
						<Code code={
							`import Alert from "@components/Alert";

<Alert className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5"/>Default</Alert>
<Alert.green>Green</Alert.green>
<Alert.red className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5" />Red <span className="font-normal">Danger</span></Alert.red>
<Alert.yellow isLarge>Yellow</Alert.yellow>
<Alert.orange pills>Orange</Alert.orange>
<Alert.purple pills>Purple</Alert.purple>
<Alert.dark pills>Dark</Alert.dark>`
						}>
						</Code>
					</Section>

					<Section id="alert-outline" name="Alert Outline">
						<AlertOutline className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5" />Default</AlertOutline>
						<AlertOutline.green>Green</AlertOutline.green>
						<AlertOutline.red className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5" />Red <span className="font-normal">Danger</span></AlertOutline.red>
						<AlertOutline.yellow isLarge>Yellow</AlertOutline.yellow>
						<AlertOutline.orange pills>Orange</AlertOutline.orange>
						<AlertOutline.purple pills>Purple</AlertOutline.purple>
						<AlertOutline.dark pills>Dark</AlertOutline.dark>
						<Code code={
							`import AlertOutline from "@components/AlertOutline";

<AlertOutline className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5" />Default</AlertOutline>
<AlertOutline.green>Green</AlertOutline.green>
<AlertOutline.red className="flex gap-1 items-center font-medium" isLarge><InformationCircleIcon className="h-5 w-5" />Red <span className="font-normal">Danger</span></AlertOutline.red>
<AlertOutline.yellow isLarge>Yellow</AlertOutline.yellow>
<AlertOutline.orange pills>Orange</AlertOutline.orange>
<AlertOutline.purple pills>Purple</AlertOutline.purple>
<AlertOutline.dark pills>Dark</AlertOutline.dark>`
						}>
						</Code>
					</Section>

					<Section id="skeletons" name="Skeletons">
						<Skeletons className="!h-32 w-full" />
						<Skeletons className="max-w-[12rem]" />
						<Skeletons className="max-w-[24rem] !rounded-full" />
						<Skeletons className="!w-24 !h-24 !rounded-full" />
						<Code code={
							`import Skeletons from "@components/Skeletons";

<Skeletons className="!h-32 w-full" />
<Skeletons className="max-w-[12rem]" />
<Skeletons className="max-w-[24rem] !rounded-full" />
<Skeletons className="!w-24 !h-24 !rounded-full" />`
						}>
						</Code>
					</Section>

					<Section id="progress" name="Progress Bar">
						<Progress percent={20} />
						<br />
						<Progress height="h-1.5" percent={40} />
						<br />
						<Progress height="h-3" percent={60} />
						<br />
						<Progress.percentage percent={80} />
						<br />
						<Code code={
							`import Progress from "@components/Progress";

<Progress percent={20} />
<br />
<Progress height="h-1.5" percent={40} />
<br />
<Progress height="h-3" percent={60} />
<br />
<Progress.percentage percent={80} />`
						}>
						</Code>
					</Section>

				</main>
			</Layout>

			<Footer />

		</div>
	);
}